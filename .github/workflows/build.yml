name: Build Projects

on:
  workflow_call:
  workflow_dispatch:
  push:
    branches: ["master", "main"]
    paths-ignore:
    - '**/*.md'
  pull_request:

jobs:
  build-node:
    if: success()
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        node-version: 
          - 16.x
        os: 
          - win
          - linux
        proj:
          - node
          - node-oimo
          - node-p2p
          - node-p2p-pkg
          - node-three
          - node-heaps

    steps:
      - name: Setup
        uses: Kyrasuum/HaxeHLSetup@v1
        
      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}

      - name: Prereqs
        shell: bash
        run: |
          cd ${{ matrix.proj }}
          haxelib install Console.hx --always
          haxelib install build/node.hxml --always
          npm install

      - name: Build Node Project
        shell: bash
        run: |
          cd ${{ matrix.proj }}
          npm run build --if-present
          npm run dist --if-present

      - name: Archive Node Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }} ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/dist/node-hx-${{ matrix.os }}*

  run-interp:
    if: success()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        proj:
          - tui
          - helloworld

    steps:
      - name: Setup
        uses: Kyrasuum/HaxeHLSetup@v1
        
      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Run Interp Project
        shell: bash
        run: |
          cd ${{ matrix.proj }}
          haxelib install Console.hx --always
          haxelib install build.hxml --always
          haxe build.hxml

  build-cpp:
    if: success()
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        proj:
          - hxraylib

    steps:
      - name: Setup
        uses: Kyrasuum/HaxeHLSetup@v1
        
      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Build CPP Project (Linux)
        shell: bash
        if: runner.os == 'Linux'
        run: |
          cd ${{ matrix.proj }}
          haxelib install build/linux.hxml --always
          make linux
          
      - name: Build CPP Project (Mac)
        shell: bash
        if: runner.os == 'macOs'
        run: |
          cd ${{ matrix.proj }}
          haxelib install build/mac.hxml --always
          make mac

      - name: Build CPP Project (Windows)
        shell: bash
        if: runner.os == 'Windows'
        run: |
          cd ${{ matrix.proj }}
          haxelib install build/windows.hxml --always
          make windows

      - name: Archive CPP Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.os }} ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/${{ runner.os }}

  build-js:
    if: success()
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        proj:
          - web-coconut

    steps:
      - name: Setup
        uses: Kyrasuum/HaxeHLSetup@v1

      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Build JS Project
        shell: bash
        run: |
          cd ${{ matrix.proj }}
          haxelib install *.hxml --always
          make

      - name: Archive JS Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/
    
  build-hl:
    if: success()
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        proj:
          - async
          - heaps
          - heaps-cubefield
          - hl-tui
          - hxbit
          - hxwebsockets
          - mphx
          - udprotean

    steps:
      - name: Setup
        uses: Kyrasuum/HaxeHLSetup@v1

      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Build HL Project
        shell: bash
        run: |
          cd ${{ matrix.proj }}
          haxelib install *.hxml --always
          make

      - name: Archive Linux HL Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*_linux/hl

      - name: Archive Windows HL Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*_win/hl
            
      - name: Archive Linux HL-SDL Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: linux ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*/*_linux/hl

      - name: Archive Windows HL-SDL Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: windows ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*/*_win/hl
            
      - name: Archive Windows Directx Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: directx ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*/directx/*

      - name: Archive JS Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: js ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/*/js/

      - name: Archive SWF Production Artifacts
        uses: actions/upload-artifact@v2
        with:
          name: swf ${{ matrix.proj }}
          retention-days: 1
          if-no-files-found: ignore
          path: |
            ./${{ matrix.proj }}/release/swf/flash/swf/
