# https://docs.github.com/en/free-pro-team@latest/actions/reference/workflow-syntax-for-github-actions
name: Build

on:
  push:
    paths-ignore:
    - '**/*.md'
  pull_request:
  workflow_dispatch:
    # https://github.blog/changelog/2020-07-06-github-actions-manual-triggers-with-workflow_dispatch/

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: 
          - ubuntu-latest
          - macos-latest
          - windows-latest
        haxe: 
          - 4.2.3

    steps:
      - name: "Cache Haxelib Repository"
        uses: actions/cache@v2
        with:
          path: $RUNNER_TOOL_CACHE/haxe/${{ matrix.haxe }}/x64/lib
          key: ${{ runner.os }}-haxelib-${{ hashFiles('**/haxelib.json') }}
          restore-keys: |
            ${{ runner.os }}-haxelib-

      - name: Upgrade brew
        if: runner.os == 'macOS'
        env:
          # https://docs.brew.sh/Manpage#environment
          HOMEBREW_NO_ANALYTICS: 1
          HOMEBREW_NO_INSTALL_CLEANUP: 1
        run: |
          echo "::group::brew update" && brew update && echo "::endgroup::"
          echo "::group::brew bundle" && brew bundle && echo "::endgroup::"
          echo "::group::brew config" && brew config && echo "::endgroup::"
          echo "::group::brew install neko" && brew install neko && echo "::endgroup::"

          # workaround to prevent "/usr/local/... is not inside a keg" during "brew install mono"
          rm /usr/local/bin/2to3
          rm /usr/local/share/man/man1/*
          rm /usr/local/share/man/man5/*
      - name: Set up Python 3
        uses: actions/setup-python@v2 # https://github.com/actions/setup-python
        with:
          python-version: 3.8

      - name: Add msbuild to PATH
        if: startsWith(matrix.target, 'win')
        uses: microsoft/setup-msbuild@v1.0.3

      - name: "Install: Required Dev Packages (Linux)"
        if: runner.os == 'Linux'
        shell: bash
        run: |
          set -eux
          echo "MARCH=64" >> $GITHUB_ENV
          sudo apt-get update -y
          sudo apt-get install --no-install-recommends -y \
            libmbedtls-dev \
            libopenal-dev \
            libpng-dev \
            libsdl2-dev \
            libturbojpeg-dev \
            libjpeg-turbo8 \
            libjpeg-turbo8-dev \
            libuv1-dev \
            libvorbis-dev
          sudo apt-get install --no-install-recommends -y neko
          neko || true # print neko version
      - name: "Install: Required Dev Packages (MacOS)"
        if: runner.os == 'macOs'
        shell: bash
        run: |
          neko || true # print neko version
  
      - name: "Install: Required Dev Packages (Windows)"
        if: runner.os == 'Windows'
        shell: bash
        run: |
          choco install --no-progress neko -y
          nekopath=$(find C:/ProgramData/chocolatey/lib/neko -name neko.dll -printf '%h\n')
          echo "NEKOPATH=$nekopath" >> $GITHUB_ENV
          neko || true # print neko version

      - name: Install Haxe ${{ matrix.haxe }}
        uses: krdlab/setup-haxe@v1 # https://github.com/krdlab/setup-haxe
        with:
          haxe-version: ${{ matrix.haxe }}
          
      - name: "Configure: Haxelib"
        shell: bash
        run: |
          set -eux
          haxelib setup ~/haxelib
          haxelib install hashlink
          haxelib list

      - name: Git Checkout
        uses: actions/checkout@v2 #https://github.com/actions/checkout

      - name: Install Haxe libs
        shell: bash
        run: |
          haxelib git mphx https://github.com/5Mixer/mphx.git

      - name: Build Hashlink
        shell: bash
        run: |
          haxe build.hxml
